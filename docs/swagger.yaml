basePath: /api
definitions:
  models.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  models.User:
    properties:
      address:
        type: string
      age:
        type: integer
      email:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  models.UserRegister:
    properties:
      address:
        type: string
      age:
        type: integer
      confirm_password:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
info:
  contact: {}
  description: Swagger API for Golang Test.
  termsOfService: http://swagger.io/terms/
  title: Go test Swagger API
  version: "1.0"
paths:
  /private/logged:
    get:
      description: Retrieves user based on access token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Retrieves user based on access token
      tags:
      - Private Routes
  /private/logout:
    post:
      description: Remove access token from cookie
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Remove access token from cookie
      tags:
      - Private Routes
  /private/users:
    get:
      description: Retrieves all users.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
      summary: Retrieves all users.
      tags:
      - Private Routes
    post:
      description: Create a new user.
      parameters:
      - description: User Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.UserRegister'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Create a new user.
      tags:
      - Private Routes
    put:
      description: Update selected user
      parameters:
      - description: User Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Update selected user
      tags:
      - Private Routes
  /private/users/{id}:
    delete:
      description: Delete user based on given ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Delete user based on given ID
      tags:
      - Private Routes
    get:
      description: Retrieves user based on given ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Retrieves user based on given ID
      tags:
      - Private Routes
  /public/healthCheck:
    get:
      description: Healthcheck
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Healthcheck
      tags:
      - Public Routes
  /public/login:
    post:
      description: Public route to authenticate a user.
      parameters:
      - description: User Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Public route to authenticate a user
      tags:
      - Public Routes
  /public/register:
    post:
      description: Public route to create a new user.
      parameters:
      - description: User Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.UserRegister'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Public route to create a new user
      tags:
      - Public Routes
swagger: "2.0"
